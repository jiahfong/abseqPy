# D-FAMILY
file1.d <- paste(dir1, path_to_clone, sample_name1, "_igd_dist_family_level.csv", sep="")
file2.d <- paste(dir2, path_to_clone, sample_name2, "_igd_dist_family_level.csv", sep="")
file3.d <- paste(dir3, path_to_clone, sample_name3, "_igd_dist_family_level.csv", sep="")
df1.d <- read.csv(file1.d, stringsAsFactors=FALSE)
df2.d <- read.csv(file2.d, stringsAsFactors=FALSE)
df3.d <- read.csv(file3.d, stringsAsFactors=FALSE)
# J-FAMILY
file1.j <- paste(dir1, path_to_clone, sample_name1, "_igj_dist_family_level.csv", sep="")
file2.j <- paste(dir2, path_to_clone, sample_name2, "_igj_dist_family_level.csv", sep="")
file3.j <- paste(dir3, path_to_clone, sample_name3, "_igj_dist_family_level.csv", sep="")
df1.j <- read.csv(file1.j, stringsAsFactors=FALSE)
df2.j <- read.csv(file2.j, stringsAsFactors=FALSE)
df3.j <- read.csv(file3.j, stringsAsFactors=FALSE)
p1 <- plot_dist(df1.v, df2.v, df3.v, "V")
p2 <- plot_dist(df1.d, df2.d, df3.d, "D")
p3 <- plot_dist(df1.j, df2.j, df3.j, "J")
grid.arrange(p1, p2, p3, ncol=3)
library(circlize)
circulize <- function(sample_name, dir, path_to_clone) {
file <- paste(dir, path_to_clone, sample_name, "_vjassoc.csv", sep="")
df <- read.csv(file)
circos.par(gap.after = c(rep(5, length(unique(df[[1]]))-1), 15,
rep(5, length(unique(df[[2]]))-1), 15))
#chordDiagram(df, annotationTrack="grid", preAllocateTracks = list(track.height=0.2), transparency=0.5)
chordDiagram(df, annotationTrack="grid", preAllocateTracks = list(track.height=0.2))
#chordDiagram(df)
circos.trackPlotRegion(track.index = 1, bg.border = NA,
panel.fun = function(x, y) {
sector.name = get.cell.meta.data("sector.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
circos.text(mean(xlim), ylim[1], sector.name, facing = "clockwise", adj = c(0, 1.5))
}
)
circos.clear()
}
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
path_to_clone <- "/abundance/"
layout(matrix(1:3, 1, 3))
circulize(sample_name1, dir1, path_to_clone)
circulize(sample_name2, dir2, path_to_clone)
circulize(sample_name3, dir3, path_to_clone)
knitr::opts_chunk$set(prompt=TRUE, comment="", warning=FALSE, message=TRUE, fig.width=5, fig.align="center")
options(digits=2)
options(width=105)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(ggrepel)
library(gridExtra)
theme_set(theme_classic())
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
path_to_clone <- "/abundance/"
plot_dist <- function(df1, df2, df3, family) {
# Don't need the total row
df1 <- df1[!(df1$Germline.group == 'TOTAL'), ]
df2 <- df2[!(df2$Germline.group == 'TOTAL'), ]
df3 <- df3[!(df3$Germline.group == 'TOTAL'), ]
# add a column specifying where this data came from (which sample)
df1$round <- rep("PCR1", nrow(df1))
df2$round <- rep("PCR2", nrow(df2))
df3$round <- rep("PCR3", nrow(df3))
df.intermediate_union <- rbind(df1, df2)
df.union <- rbind(df.intermediate_union, df3)
g <- ggplot(df.union, aes(Germline.group, Percentage....)) +
geom_bar(stat="identity", aes(fill=round), width=0.5, position="dodge") +
theme(axis.text.x = element_text(angle=74, vjust=0.6)) +
#geom_text_repel(aes(label = Count), size = 3) +
#geom_text(aes(label = Count), vjust=-1, size = 3) +
labs(title=paste("Histogram of ", family, " Family Distribution", sep=""),
subtitle=paste("Percentage of IGH", family, " family distribution across all rounds", sep=""),
x=paste(family,"-Germline family", sep=""),
y="Percentage")
return(g)
}
# ====================================================== #
# Family level stacked bar plot (Histogram)
# ====================================================== #
# V-FAMILY
file1.v <- paste(dir1, path_to_clone, sample_name1, "_igv_dist_family_level.csv", sep="")
file2.v <- paste(dir2, path_to_clone, sample_name2, "_igv_dist_family_level.csv", sep="")
file3.v <- paste(dir3, path_to_clone, sample_name3, "_igv_dist_family_level.csv", sep="")
df1.v <- read.csv(file1.v, stringsAsFactors=FALSE)
df2.v <- read.csv(file2.v, stringsAsFactors=FALSE)
df3.v <- read.csv(file3.v, stringsAsFactors=FALSE)
# D-FAMILY
file1.d <- paste(dir1, path_to_clone, sample_name1, "_igd_dist_family_level.csv", sep="")
file2.d <- paste(dir2, path_to_clone, sample_name2, "_igd_dist_family_level.csv", sep="")
file3.d <- paste(dir3, path_to_clone, sample_name3, "_igd_dist_family_level.csv", sep="")
df1.d <- read.csv(file1.d, stringsAsFactors=FALSE)
df2.d <- read.csv(file2.d, stringsAsFactors=FALSE)
df3.d <- read.csv(file3.d, stringsAsFactors=FALSE)
# J-FAMILY
file1.j <- paste(dir1, path_to_clone, sample_name1, "_igj_dist_family_level.csv", sep="")
file2.j <- paste(dir2, path_to_clone, sample_name2, "_igj_dist_family_level.csv", sep="")
file3.j <- paste(dir3, path_to_clone, sample_name3, "_igj_dist_family_level.csv", sep="")
df1.j <- read.csv(file1.j, stringsAsFactors=FALSE)
df2.j <- read.csv(file2.j, stringsAsFactors=FALSE)
df3.j <- read.csv(file3.j, stringsAsFactors=FALSE)
p1 <- plot_dist(df1.v, df2.v, df3.v, "V")
p2 <- plot_dist(df1.d, df2.d, df3.d, "D")
p3 <- plot_dist(df1.j, df2.j, df3.j, "J")
grid.arrange(p1, p2, p3, ncol=3)
knitr::opts_chunk$set(prompt=TRUE, comment="", warning=FALSE, message=TRUE, fig.width=5, fig.align="center")
options(digits=2)
options(width=105)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(ggrepel)
library(gridExtra)
theme_set(theme_classic())
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
path_to_clone <- "/abundance/"
plot_dist <- function(df1, df2, df3, family) {
# Don't need the total row
df1 <- df1[!(df1$Germline.group == 'TOTAL'), ]
df2 <- df2[!(df2$Germline.group == 'TOTAL'), ]
df3 <- df3[!(df3$Germline.group == 'TOTAL'), ]
# add a column specifying where this data came from (which sample)
df1$round <- rep("PCR1", nrow(df1))
df2$round <- rep("PCR2", nrow(df2))
df3$round <- rep("PCR3", nrow(df3))
df.intermediate_union <- rbind(df1, df2)
df.union <- rbind(df.intermediate_union, df3)
g <- ggplot(df.union, aes(Germline.group, Percentage....)) +
geom_bar(stat="identity", aes(fill=round), width=0.5, position="dodge") +
theme(axis.text.x = element_text(angle=74, vjust=0.6)) +
#geom_text_repel(aes(label = Count), size = 3) +
#geom_text(aes(label = Count), vjust=-1, size = 3) +
labs(title=paste("Histogram of ", family, " Family Distribution", sep=""),
subtitle=paste("Percentage of IGH", family, " family distribution across all rounds", sep=""),
x=paste(family,"-Germline family", sep=""),
y="Percentage")
return(g)
}
# ====================================================== #
# Family level stacked bar plot (Histogram)
# ====================================================== #
# V-FAMILY
file1.v <- paste(dir1, path_to_clone, sample_name1, "_igv_dist_family_level.csv", sep="")
file2.v <- paste(dir2, path_to_clone, sample_name2, "_igv_dist_family_level.csv", sep="")
file3.v <- paste(dir3, path_to_clone, sample_name3, "_igv_dist_family_level.csv", sep="")
df1.v <- read.csv(file1.v, stringsAsFactors=FALSE)
df2.v <- read.csv(file2.v, stringsAsFactors=FALSE)
df3.v <- read.csv(file3.v, stringsAsFactors=FALSE)
# D-FAMILY
file1.d <- paste(dir1, path_to_clone, sample_name1, "_igd_dist_family_level.csv", sep="")
file2.d <- paste(dir2, path_to_clone, sample_name2, "_igd_dist_family_level.csv", sep="")
file3.d <- paste(dir3, path_to_clone, sample_name3, "_igd_dist_family_level.csv", sep="")
df1.d <- read.csv(file1.d, stringsAsFactors=FALSE)
df2.d <- read.csv(file2.d, stringsAsFactors=FALSE)
df3.d <- read.csv(file3.d, stringsAsFactors=FALSE)
# J-FAMILY
file1.j <- paste(dir1, path_to_clone, sample_name1, "_igj_dist_family_level.csv", sep="")
file2.j <- paste(dir2, path_to_clone, sample_name2, "_igj_dist_family_level.csv", sep="")
file3.j <- paste(dir3, path_to_clone, sample_name3, "_igj_dist_family_level.csv", sep="")
df1.j <- read.csv(file1.j, stringsAsFactors=FALSE)
df2.j <- read.csv(file2.j, stringsAsFactors=FALSE)
df3.j <- read.csv(file3.j, stringsAsFactors=FALSE)
p1 <- plot_dist(df1.v, df2.v, df3.v, "V")
p2 <- plot_dist(df1.d, df2.d, df3.d, "D")
p3 <- plot_dist(df1.j, df2.j, df3.j, "J")
grid.arrange(p1, p2, p3, ncol=3)
knitr::opts_chunk$set(prompt=TRUE, comment="", warning=FALSE, message=TRUE, fig.width=5, fig.align="center")
options(digits=2)
options(width=105)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(ggrepel)
library(gridExtra)
theme_set(theme_classic())
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
path_to_clone <- "/abundance/"
plot_dist <- function(df1, df2, df3, family) {
# Don't need the total row
df1 <- df1[!(df1$Germline.group == 'TOTAL'), ]
df2 <- df2[!(df2$Germline.group == 'TOTAL'), ]
df3 <- df3[!(df3$Germline.group == 'TOTAL'), ]
# add a column specifying where this data came from (which sample)
df1$round <- rep("PCR1", nrow(df1))
df2$round <- rep("PCR2", nrow(df2))
df3$round <- rep("PCR3", nrow(df3))
df.intermediate_union <- rbind(df1, df2)
df.union <- rbind(df.intermediate_union, df3)
g <- ggplot(df.union, aes(Germline.group, Percentage....)) +
geom_bar(stat="identity", aes(fill=round), width=0.5, position="dodge") +
theme(axis.text.x = element_text(angle=74, vjust=0.6)) +
#geom_text_repel(aes(label = Count), size = 3) +
#geom_text(aes(label = Count), vjust=-1, size = 3) +
labs(title=paste("Histogram of ", family, " Family Distribution", sep=""),
subtitle=paste("Percentage of IGH", family, " family distribution across all rounds", sep=""),
x=paste(family,"-Germline family", sep=""),
y="Percentage")
return(g)
}
# ====================================================== #
# Family level stacked bar plot (Histogram)
# ====================================================== #
# V-FAMILY
file1.v <- paste(dir1, path_to_clone, sample_name1, "_igv_dist_family_level.csv", sep="")
file2.v <- paste(dir2, path_to_clone, sample_name2, "_igv_dist_family_level.csv", sep="")
file3.v <- paste(dir3, path_to_clone, sample_name3, "_igv_dist_family_level.csv", sep="")
df1.v <- read.csv(file1.v, stringsAsFactors=FALSE)
df2.v <- read.csv(file2.v, stringsAsFactors=FALSE)
df3.v <- read.csv(file3.v, stringsAsFactors=FALSE)
# D-FAMILY
file1.d <- paste(dir1, path_to_clone, sample_name1, "_igd_dist_family_level.csv", sep="")
file2.d <- paste(dir2, path_to_clone, sample_name2, "_igd_dist_family_level.csv", sep="")
file3.d <- paste(dir3, path_to_clone, sample_name3, "_igd_dist_family_level.csv", sep="")
df1.d <- read.csv(file1.d, stringsAsFactors=FALSE)
df2.d <- read.csv(file2.d, stringsAsFactors=FALSE)
df3.d <- read.csv(file3.d, stringsAsFactors=FALSE)
# J-FAMILY
file1.j <- paste(dir1, path_to_clone, sample_name1, "_igj_dist_family_level.csv", sep="")
file2.j <- paste(dir2, path_to_clone, sample_name2, "_igj_dist_family_level.csv", sep="")
file3.j <- paste(dir3, path_to_clone, sample_name3, "_igj_dist_family_level.csv", sep="")
df1.j <- read.csv(file1.j, stringsAsFactors=FALSE)
df2.j <- read.csv(file2.j, stringsAsFactors=FALSE)
df3.j <- read.csv(file3.j, stringsAsFactors=FALSE)
p1 <- plot_dist(df1.v, df2.v, df3.v, "V")
p2 <- plot_dist(df1.d, df2.d, df3.d, "D")
p3 <- plot_dist(df1.j, df2.j, df3.j, "J")
grid.arrange(p1, p2, p3, ncol=3)
library(ggplot2)
library(reshape2)
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
elisa = "../ELISA/ELISA1.csv"
path_to_clone <- "/diversity/clonotypes/"
file1 <- paste(dir1, path_to_clone, sample_name1, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file2 <- paste(dir2, path_to_clone, sample_name2, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file3 <- paste(dir3, path_to_clone, sample_name3, "_cdr3_clonotypes_100_over.csv.gz", sep="")
df1 <- read.csv(file1, stringsAsFactors=FALSE)
df2 <- read.csv(file2, stringsAsFactors=FALSE)
df3 <- read.csv(file3, stringsAsFactors=FALSE)
eli <- read.csv(elisa, stringsAsFactors=FALSE)
eli <- eli[c("Clonotype", "Frequency")]
# some cleanup
keep_col_name <- c("Clonotype", "Count")
df1 <- df1[keep_col_name]
df2 <- df2[keep_col_name]
df3 <- df3[keep_col_name]
total1 <- sum(df1$Count)
total2 <- sum(df2$Count)
total3 <- sum(df3$Count)
# gather all clonotypes from both repertoire
df.halfunion <- merge(df1, df2, by="Clonotype", all.y=TRUE, all.x=TRUE)
colnames(df.halfunion) <- c("Clonotype", "Round1", "Round2")
df.union <- merge(df.halfunion, df3, by="Clonotype", all.y=TRUE, all.x=TRUE)
colnames(df.union) <- c("Clonotype", "Round1", "Round2", "Round3")
# replace NaN with 0
df.union[is.na(df.union)] <- 0
# intersect with elisa, how many left?
df.intersection <- merge(df.union, eli, by.x="Clonotype", by.y="Clonotype")
names(df.intersection)[names(df.intersection) == 'Frequency'] <- 'elisa'
df.intersection$round3 <- df.intersection$Round3/total3
df.intersection$round2 <- df.intersection$Round2/total2
df.intersection$round1 <- df.intersection$Round1/total1
# replace NaN with 0
df.intersection[is.na(df.intersection)] <- 0
# reshape the dataframe so it's easier to plot
df.reshaped <- melt(df.intersection, measure.vars=c("elisa", "round3", "round2", "round1"))
g <- ggplot(df.reshaped, aes(x=Clonotype, y=value)) +
geom_bar(stat='identity', aes(fill=variable), position='dodge') +
theme(text=element_text(size=10), axis.text.x = element_text(angle=45, hjust=1)) +
labs(title="Distribution of top 101 clones",
subtitle=paste("Clone distribution that are present in randomly picked (", nrow(eli) ,")ELISA-positive clones", sep=""),
y="Distribution"
)
plot(g)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(reshape2)
sample_name3 <- "PCR6_L001"
dir3 = "PCR6_B5HC6_TGCAGCTA-ACATCG_L001"
elisa = "../ELISA/ELISA2.csv"
path_to_clone <- "/diversity/clonotypes/"
file3 <- paste(dir3, path_to_clone, sample_name3, "_cdr3_clonotypes_100_over.csv.gz", sep="")
df3 <- read.csv(file3, stringsAsFactors=FALSE)
eli <- read.csv(elisa, stringsAsFactors=FALSE)
eli <- eli[c("Clonotype", "Frequency")]
# some cleanup
keep_col_name <- c("Clonotype", "Count")
df3 <- df3[keep_col_name]
# keep top 10 only
df3 <- head(df3, 10)
# gather all clonotypes from both repertoire
df.union <- merge(df3, eli, by="Clonotype", all.y=TRUE, all.x=TRUE)
# replace NaN with 0
df.union[is.na(df.union)] <- 0
names(df.union)[names(df.union) == 'Frequency'] <- 'elisa'
names(df.union)[names(df.union) == 'Count'] <- 'round3'
df.union$round3 <- df.union$round3 / sum(df.union$round3)
df.reshaped <- melt(df.union, measure.vars = c("round3", "elisa"))
g <- ggplot(df.reshaped, aes(x=Clonotype, y=value)) +
geom_bar(stat='identity', aes(fill=variable)) +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
labs(title="Distribution of (top 10) intersecting clones in PCR6\n and ELISA-positive clones", y="Distribution")
plot(g)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(reshape2)
sample_name3 <- "PCR8_L001"
dir3 = "PCR8_B5HC6_AGGCAGAA-TGACCA_L001"
elisa = "../ELISA/ELISA3.csv"
path_to_clone <- "/diversity/clonotypes/"
file3 <- paste(dir3, path_to_clone, sample_name3, "_cdr3_clonotypes_100_over.csv.gz", sep="")
df3 <- read.csv(file3, stringsAsFactors=FALSE)
eli <- read.csv(elisa, stringsAsFactors=FALSE)
eli <- eli[c("Clonotype", "Frequency")]
# some cleanup
keep_col_name <- c("Clonotype", "Count")
df3 <- df3[keep_col_name]
# keep top 10 only
df3 <- head(df3, 10)
# gather all clonotypes from both repertoire
df.union <- merge(df3, eli, by="Clonotype", all.y=TRUE, all.x=TRUE)
# replace NaN with 0
df.union[is.na(df.union)] <- 0
names(df.union)[names(df.union) == 'Frequency'] <- 'elisa'
names(df.union)[names(df.union) == 'Count'] <- 'round3'
df.union$round3 <- df.union$round3 / sum(df.union$round3)
df.reshaped <- melt(df.union, measure.vars = c("round3", "elisa"))
g <- ggplot(df.reshaped, aes(x=Clonotype, y=value)) +
geom_bar(stat='identity', aes(fill=variable)) +
theme(axis.text.x = element_text(angle=70, hjust=1)) +
labs(title="Distribution of (top 10) intersecting clones in PCR8 and ELISA-positive clones", y="Distribution")
plot(g)
library(ggplot2)
library(reshape2)
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
elisa = "../ELISA/ELISA1.csv"
path_to_clone <- "/diversity/clonotypes/"
file1 <- paste(dir1, path_to_clone, sample_name1, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file2 <- paste(dir2, path_to_clone, sample_name2, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file3 <- paste(dir3, path_to_clone, sample_name3, "_cdr3_clonotypes_100_over.csv.gz", sep="")
df1 <- read.csv(file1, stringsAsFactors=FALSE)
df2 <- read.csv(file2, stringsAsFactors=FALSE)
df3 <- read.csv(file3, stringsAsFactors=FALSE)
eli <- read.csv(elisa, stringsAsFactors=FALSE)
eli <- eli[c("Clonotype", "Frequency")]
# some cleanup
keep_col_name <- c("Clonotype", "Count")
df1 <- df1[keep_col_name]
df2 <- df2[keep_col_name]
df3 <- df3[keep_col_name]
# gather all intersecting clonotypes
#df.halfunion <- merge(df1, df2, by="Clonotype")
#colnames(df.halfunion) <- c("Clonotype", "Round1", "Round2")
df.intersection<- merge(df2, df3, by="Clonotype")
colnames(df.intersection) <- c("Clonotype", "Round2", "Round3")
# intersect with elisa
df.intersection <- merge(df.intersection, eli, by.x="Clonotype", by.y="Clonotype", all.x=TRUE)
# replace NaN with 0
df.intersection[is.na(df.intersection)] <- 0
names(df.intersection)[names(df.intersection) == 'Frequency'] <- 'elisa'
df.intersection$round3 <- df.intersection$Round3/sum(df3$Count)
df.intersection$round2 <- df.intersection$Round2/sum(df2$Count)
# replace NaN with 0
df.intersection[is.na(df.intersection)] <- 0
df.reshaped <- melt(df.intersection, measure.vars = c("elisa", "round2", "round3"))
g <- ggplot(df.reshaped, aes(x=Clonotype, y=value)) +
geom_bar(stat='identity', aes(fill=variable), position='dodge') +
theme(axis.text.x = element_text(angle=37, hjust=1)) +
labs(title="Distribution of (top 101) intersecting clones in PCR2 and PCR3", y="Distribution")
plot(g)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/harry/AGRF/data')
knitr::opts_chunk$set(engine.path = list(python = '/Users/harry/Documents/miniconda3/envs/AbSeq/bin/python'))
library(ggplot2)
library(ggrepel)
library(gridExtra)
theme_set(theme_classic())
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
path_to_clone <- "/abundance/"
plot_dist <- function(df1, df2, df3, family) {
# Don't need the total row
df1 <- df1[!(df1$Germline.group == 'TOTAL'), ]
df2 <- df2[!(df2$Germline.group == 'TOTAL'), ]
df3 <- df3[!(df3$Germline.group == 'TOTAL'), ]
# add a column specifying where this data came from (which sample)
df1$round <- rep("PCR1", nrow(df1))
df2$round <- rep("PCR2", nrow(df2))
df3$round <- rep("PCR3", nrow(df3))
df.intermediate_union <- rbind(df1, df2)
df.union <- rbind(df.intermediate_union, df3)
g <- ggplot(df.union, aes(Germline.group, Percentage....)) +
geom_bar(stat="identity", aes(fill=round), width=0.5, position="dodge") +
theme(axis.text.x = element_text(angle=74, vjust=0.6)) +
#geom_text_repel(aes(label = Count), size = 3) +
#geom_text(aes(label = Count), vjust=-1, size = 3) +
labs(title=paste("Histogram of ", family, " Family Distribution", sep=""),
subtitle=paste("Percentage of IGH", family, " family distribution across all rounds", sep=""),
x=paste(family,"-Germline family", sep=""),
y="Percentage")
return(g)
}
# ====================================================== #
# Family level stacked bar plot (Histogram)
# ====================================================== #
# V-FAMILY
file1.v <- paste(dir1, path_to_clone, sample_name1, "_igv_dist_family_level.csv", sep="")
file2.v <- paste(dir2, path_to_clone, sample_name2, "_igv_dist_family_level.csv", sep="")
file3.v <- paste(dir3, path_to_clone, sample_name3, "_igv_dist_family_level.csv", sep="")
df1.v <- read.csv(file1.v, stringsAsFactors=FALSE)
df2.v <- read.csv(file2.v, stringsAsFactors=FALSE)
df3.v <- read.csv(file3.v, stringsAsFactors=FALSE)
# D-FAMILY
file1.d <- paste(dir1, path_to_clone, sample_name1, "_igd_dist_family_level.csv", sep="")
file2.d <- paste(dir2, path_to_clone, sample_name2, "_igd_dist_family_level.csv", sep="")
file3.d <- paste(dir3, path_to_clone, sample_name3, "_igd_dist_family_level.csv", sep="")
df1.d <- read.csv(file1.d, stringsAsFactors=FALSE)
df2.d <- read.csv(file2.d, stringsAsFactors=FALSE)
df3.d <- read.csv(file3.d, stringsAsFactors=FALSE)
# J-FAMILY
file1.j <- paste(dir1, path_to_clone, sample_name1, "_igj_dist_family_level.csv", sep="")
file2.j <- paste(dir2, path_to_clone, sample_name2, "_igj_dist_family_level.csv", sep="")
file3.j <- paste(dir3, path_to_clone, sample_name3, "_igj_dist_family_level.csv", sep="")
df1.j <- read.csv(file1.j, stringsAsFactors=FALSE)
df2.j <- read.csv(file2.j, stringsAsFactors=FALSE)
df3.j <- read.csv(file3.j, stringsAsFactors=FALSE)
p1 <- plot_dist(df1.v, df2.v, df3.v, "V")
p2 <- plot_dist(df1.d, df2.d, df3.d, "D")
p3 <- plot_dist(df1.j, df2.j, df3.j, "J")
grid.arrange(p1, p2, p3, ncol=3)
library(ggplot2)
library(reshape2)
sample_name1 <- "PCR1_L001"
sample_name2 <- "PCR2_L001"
sample_name3 <- "PCR3_L001"
dir1 = "PCR1_B5HC6_CAACGACG-CGTGAT_L001"
dir2 = "PCR2_B5HC6_CTAGTACG-CTAGCT_L001"
dir3 = "PCR3_B5HC6_AGGCAGAA-TACAGC_L001"
elisa = "../ELISA/ELISA1.csv"
path_to_clone <- "/diversity/clonotypes/"
file1 <- paste(dir1, path_to_clone, sample_name1, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file2 <- paste(dir2, path_to_clone, sample_name2, "_cdr3_clonotypes_100_over.csv.gz", sep="")
file3 <- paste(dir3, path_to_clone, sample_name3, "_cdr3_clonotypes_100_over.csv.gz", sep="")
df1 <- read.csv(file1, stringsAsFactors=FALSE)
df2 <- read.csv(file2, stringsAsFactors=FALSE)
df3 <- read.csv(file3, stringsAsFactors=FALSE)
eli <- read.csv(elisa, stringsAsFactors=FALSE)
eli <- eli[c("Clonotype", "Frequency")]
# some cleanup
keep_col_name <- c("Clonotype", "Count")
df1 <- df1[keep_col_name]
df2 <- df2[keep_col_name]
df3 <- df3[keep_col_name]
# gather all intersecting clonotypes
#df.halfunion <- merge(df1, df2, by="Clonotype")
#colnames(df.halfunion) <- c("Clonotype", "Round1", "Round2")
df.intersection<- merge(df2, df3, by="Clonotype")
colnames(df.intersection) <- c("Clonotype", "Round2", "Round3")
# intersect with elisa
df.intersection <- merge(df.intersection, eli, by.x="Clonotype", by.y="Clonotype", all.x=TRUE)
# replace NaN with 0
df.intersection[is.na(df.intersection)] <- 0
names(df.intersection)[names(df.intersection) == 'Frequency'] <- 'elisa'
df.intersection$round3 <- df.intersection$Round3/sum(df3$Count)
df.intersection$round2 <- df.intersection$Round2/sum(df2$Count)
# replace NaN with 0
df.intersection[is.na(df.intersection)] <- 0
df.reshaped <- melt(df.intersection, measure.vars = c("elisa", "round2", "round3"))
g <- ggplot(df.reshaped, aes(x=Clonotype, y=value)) +
geom_bar(stat='identity', aes(fill=variable), position='dodge') +
theme(axis.text.x = element_text(angle=37, hjust=1)) +
labs(title="Distribution of (top 101) intersecting clones in PCR2 and PCR3", y="Distribution")
plot(g)
